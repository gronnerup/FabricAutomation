name: Fabric Solution - Setup

on:
  workflow_dispatch:
    inputs:
      envs:
        description: 'JSON array of environments to run (e.g., ["dev","tst","prd"])'
        required: false
        default: '["dev","tst","prd"]'
        type: string

jobs:
  setup-fabric:
    name: Setup Fabric - ${{ matrix.env }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(inputs.envs || '["dev","tst","prd"]') }}

    env:
      PYTHONIOENCODING: utf-8
      PYTHONUNBUFFERED: 1
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      VSO_FORCE_UTF8_OUTPUT: true
      TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
      CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
      GITHUB_PAT: ${{ secrets.GIT_PAT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        working-directory: automation/resources
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Fabric solution setup script
        run: python -u automation/scripts/fabric_setup.py --environment ${{ matrix.env }}